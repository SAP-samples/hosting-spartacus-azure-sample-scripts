worker_processes  2; 

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    # HTTP Mime Types
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # HTTP Configuration
    server_tokens off;  
    sendfile        on;
    keepalive_timeout  65;
    client_header_buffer_size 32k;
    large_client_header_buffers 4 32k;
    proxy_buffers 8 34k;
    proxy_buffer_size 34k;
    server_names_hash_bucket_size 256;

    # HTTP Logs
    log_format json_combined escape=json
        '{'
        '"time_local":"$time_local",'
        '"remote_addr":"$remote_addr",'
        '"remote_user":"$remote_user",'
        '"http_host":"$http_host",'
        '"request":"$request",'
        '"status": "$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"request_time":"$request_time",'
        '"http_referrer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"http_x_forwarded_for":"$http_x_forwarded_for"'
        '}';

    access_log  /var/log/nginx/access.log  json_combined;

    # Server - Health-Check
    server {
        listen 8081;

        location /healthz {
            access_log off;
            default_type text/plain;
            return 200 "healthy\n";
        }
    }

    # Server - Spartacus 
    server {
        listen 8080; 
        
        root /opt/jsapp/html;

        # Include a X-Content-Type-Options: nosniff header to disable content-type sniffing on some browsers.
        add_header X-Content-Type-Options nosniff;

        # Cache Static (extension list: https://support.cloudflare.com/hc/en-us/articles/200172516-Understanding-Cloudflare-s-CDN)
        location ~* \.(7z|csv|gif|midi|png|tif|zip|avi|doc|gz|mkv|ppt|tiff|zst|avif|docx|ico|mp3|pptx|ttf|apk|dmg|iso|mp4|ps|webm|bin|ejs|jar|ogg|rar|webp|bmp|eot|jpg|otf|svg|woff|bz2|eps|jpeg|pdf|svgz|woff2|class|exe|js|pict|swf|xls|css|flac|mid|pls|tar|xlsx)$ {
            add_header Cache-Control "public";
            expires 1y;
        }

        location / {
            try_files $uri @backend;
        }

        location @backend {
            proxy_pass http://spartacus-ssr-node:4000;
        }

        # Manage Error Page at nginx level
        # error_page   500 502 503 504  /50x.html;
        # location = /50x.html {
        #     root   /usr/share/nginx/html;
        # }
    }
    
    #include /etc/nginx/conf.d/*.conf;

}